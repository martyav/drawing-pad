:root {
    /* Our source of truth */
    --color: 'undefined';
    --width: 'undefined';
    --nib: 'undefined';
    --isDrawing: 'undefined';
    --lastX: 'undefined';
    --lastY: 'undefined';
}

body {
    background: white;
    font-size: 16px;
    margin: 0;
    padding: 0;
    border: 0;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

main {
    display: grid;
    grid-template-columns: 18vw 82vw;
    grid-template-rows: 100vh;
}

#controls {
    width: 100%;
    height: 100vh;
}

label {
    display: block;
    margin-bottom: 4px;
    margin-top: 4px;
}

ul {
    list-style: none;
    padding-left: 8px;
}

li {
    margin-bottom: 40px;
}

input {
    box-shadow: 3px 3px black;
    border: 1px solid black;
    background: white;
}

select {
    box-shadow: 3px 3px black;
    font-size: inherit;
}

button {
    padding: 10px;
    margin-bottom: 4px;
    margin-top: 4px;
    border: 1px solid black;
    box-shadow: 3px 3px black;
    background: #e3cf1c;
    color: black;
    font-size: inherit;
}

button:active, input[type=color]:active {
    transform: translate(3px, 3px);
    box-shadow: none;
}

.disabled {
    box-shadow: none;
    background: #aaaaaa;
    color: white;
    border: 1px solid #666666;
    cursor: not-allowed;
}

select {
    margin-bottom: 100px;
    border: 1px solid black;
}

#drawHere {
    width: 100%;
    height: 100vh;
    outline: 5px solid black;
    outline-offset: -5px;
    /* outline is a property similar to border, but it is not counted as part of the element's dimensions. By default it is always outside the border area, but we can use outline-offset to position it more precisely in respect to its element. Setting it to be the inverse of its own width ensures it is contained within the div and prevents ugly scrollbars from being added to the page, as was the case when we were using border to create the same effect of an outlined panel */
    background: white;
}